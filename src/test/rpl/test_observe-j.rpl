# shift up
normally(1) {
	a := 1;
} exceptionally {
	normally (1) {
		a := 2;
	} exceptionally {
		a := 3;
	}
}
observe-j (5) a == 1;
assert-ranked(a,
	[0, 1],
	[5, 2],
	[6, 3]);
reset;

# shift up
normally(1) {
	a := 1;
} exceptionally {
	normally (1) {
		a := 2;
	} exceptionally {
		a := 3;
	}
}
observe-j (5) a > 1;
assert-ranked(a,
	[0, 2],
	[1, 3],
	[5, 1]);
reset;

# shift down
normally(1) {
	a := 1;
} exceptionally {
	normally (1) {
		a := 2;
	} exceptionally {
		a := 3;
	}
}
observe-j (0) a == 1;
assert-ranked(a,
	[0, 1],
	[0, 2],
	[1, 3]);
reset;


# false 
normally(1) {
	a := 1;
} exceptionally {
	normally (1) {
		a := 2;
	} exceptionally {
		a := 3;
	}
}
observe-j (1) false;
assert-ranked(a,
	[0, 1],
	[1, 2],
	[2, 3]);
reset;

# true 
normally(1) {
	a := 1;
} exceptionally {
	normally (1) {
		a := 2;
	} exceptionally {
		a := 3;
	}
}
observe-j (1) false;
assert-ranked(a,
	[0, 1],
	[1, 2],
	[2, 3]);
reset;

# variable rank
either a := 1; or a := 2; or a := 3;
observe-j (a) false;
print-ranking(a);
assert-ranked(a,
	[0, 1],
	[1, 2],
	[2, 3]);
reset;

