define f1() {
	return 1;
}

x := f1();
assert(x == 1);
reset;

define f2() {
	return 2;
	return 1;
}

x := f2();
assert(x == 2);
reset;

define f2b() {
	return f2();
	return 1;
}

x := f2();
assert(x == 2);
reset;

define f3() {
	x := 1 <<1>> 2;
	if (x == 1) {
		return 10;
	} else {
		return 20;
	};
}

x := f3();
assert-ranked(x,
	[0, 10],
	[1, 20]);
reset;

define f4() {
	x := 1 <<1>> 2;
	if (x == 1) {
		skip;
	} else {
		return 20;
	};
	return 10;
}

x := f4();
assert-ranked(x,
	[0, 10],
	[1, 20]);
reset;

define f5() {
	x := 1 <<1>> 2;
	if (x == 1) {
		return 10;
	} else {
		skip;
	};
	return 20;
}

x := f5();
assert-ranked(x,
	[0, 10],
	[1, 20]);
reset;

define f6() {
	x := 0;
	while (true) {
		x++;
		if (x == 10) return x;
	}
	return 20;
}

x := f6();
assert(x == 10);
reset;
