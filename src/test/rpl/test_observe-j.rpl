define test() {
	normally(1) {
		return 1;
	} exceptionally {
		normally (1) {
			return 2;
		} exceptionally {
			return 3;
		};
	};
};

# shift up
a := test();
observe-j (5) a == 1;
assert-ranked(a,
	[0, 1],
	[5, 2],
	[6, 3]);
reset;

# shift up
a := test();
observe-j (5) a > 1;
assert-ranked(a,
	[0, 2],
	[1, 3],
	[5, 1]);
reset;

# shift down
a := test();
observe-j (0) a == 1;
assert-ranked(a,
	[0, 1],
	[0, 2],
	[1, 3]);
reset;


# false 
a := test();
observe-j (1) false;
assert-ranked(a,
	[0, 1],
	[1, 2],
	[2, 3]);
reset;

# true 
a := test();
observe-j (1) false;
assert-ranked(a,
	[0, 1],
	[1, 2],
	[2, 3]);
reset;
