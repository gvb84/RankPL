# Test for list functions
list := newList();
assert size(list) == 0;

list := append(list, 10);
assert(size(list) == 1);
assert(valueAt(list, 0) == 10); 

list := append(list, 20);
assert(size(list) == 2);
assert(valueAt(list, 0) == 10); 
assert(valueAt(list, 1) == 20); 

list := replace(list, 0, 100);
assert(size(list) == 2);
assert(valueAt(list, 0) == 100); 
assert(valueAt(list, 1) == 20); 

list := replace(list, 1, 200);
assert(size(list) == 2);
assert(valueAt(list, 0) == 100); 
assert(valueAt(list, 1) == 200); 

list := append(list, 300);
assert(size(list) == 3);
assert(valueAt(list, 0) == 100); 
assert(valueAt(list, 1) == 200); 
assert(valueAt(list, 2) == 300); 

# Equality
list1 := newlist();
list2 := newlist();
assert(list1 == list2);
list1 := append(list1, 10);
assert(list1 != list2);
list2 := append(list2, 10);
assert(list1 == list2);
list1 := append(list1, 20);
assert(list1 != list2);
list2 := append(list2, 20);
assert(list1 == list2);

