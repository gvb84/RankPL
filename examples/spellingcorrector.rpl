input := "tweleven";

dictionary := [
	"one", "two", "three", "four", "five",
	"six", "seven", "eight", "nine", "ten", "eleven",
	"twelve", "thirteen", "fourteen", "fifteen", "sixteen",
	"seventeen", "eighteen", "nineteen", "twenty"
];

choice := << 0 ... size(dictionary) >>;
potential_match := dictionary[choice];

i := 0; k := 0;
input := input + "*";
potential_match := potential_match + "*";

while (i < size(input) & k < size(potential_match)) do {
	observe-l (1) (input[i] == potential_match[k]);
	if (input[i] == potential_match[k]) {
		i := i + 1; k := k + 1;
	} else {
		either { i := i + 1; k := k + 1; } or { i := i + 1; } or { k := k + 1; }
	}
}

observe i == size(input) & k == size(potential_match);
return substring(potential_match, 0, size(potential_match) - 1);
